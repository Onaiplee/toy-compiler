Grammar

    0 $accept: Program $end

    1 Program: PROGRAM ID ';' TypeDefinitions_X VariableDeclarations_X SubprogramDeclarations CompoundStatement '.'

    2 TypeDefinitions_X: /* empty */
    3                  | TypeDefinitions

    4 TypeDefinitions: TYPE TypeDefinition ';' TypeDefinition_X

    5 TypeDefinition_X: TypeDefinition_X_L

    6 TypeDefinition_X_L: /* empty */
    7                   | TypeDefinition_E TypeDefinition_X_L

    8 TypeDefinition_E: TypeDefinition ';'

    9 VariableDeclarations: VAR VariableDeclaration ';' VariableDeclaration_X

   10 VariableDeclaration_X: VariableDeclaration_X_L

   11 VariableDeclaration_X_L: /* empty */
   12                        | VariableDeclaration_E VariableDeclaration_X_L

   13 VariableDeclaration_E: VariableDeclaration ';'

   14 SubprogramDeclarations: /* empty */
   15                       | ProFunDeclarationGroup ';' SubprogramDeclarations

   16 ProFunDeclarationGroup: ProcedureDeclaration
   17                       | FunctionDeclaration

   18 TypeDefinition: ID '=' Type

   19 VariableDeclaration: IdentifierList ':' Type

   20 ProcedureDeclaration: PROCEDURE ID '(' FormalParameterList ')' ';' BlockforwardGroup

   21 FunctionDeclaration: FUNCTION ID '(' FormalParameterList ')' ':' ResultType ';' BlockforwardGroup

   22 BlockforwardGroup: Block
   23                  | FORWARD

   24 FormalParameterList: FormalParameterList_X

   25 FormalParameterList_X: /* empty */
   26                      | FormalParameterList_E

   27 FormalParameterList_E: IdentifierList ':' Type IdlistType_X

   28 IdlistType_X: IdlistType_X_L

   29 IdlistType_X_L: /* empty */
   30               | IdlistType_E IdlistType_X_L

   31 IdlistType_E: ';' IdentifierList ':' Type

   32 Block: VariableDeclarations_X CompoundStatement

   33 VariableDeclarations_X: /* empty */
   34                       | VariableDeclarations

   35 CompoundStatement: BEGIN StatementSequence END

   36 StatementSequence: Statement StatementSequence_X

   37 StatementSequence_X: StatementSequence_X_L

   38 StatementSequence_X_L: /* empty */
   39                      | StatementSequence_E StatementSequence_X_L

   40 StatementSequence_E: ';' Statement

   41 Statement: SimpleStatement
   42          | StructuredStatement

   43 SimpleStatement: /* empty */
   44                | SimpleStatement_E

   45 SimpleStatement_E: Assignment_Statement
   46                  | ProcedureStatement

   47 Assignment_Statement: Variable CE Expression

   48 ProcedureStatement: ID '(' ActualParameterList ')'

   49 StructuredStatement: MatchedStatement
   50                    | OpenStatement

   51 MatchedStatement: IF Expression THEN MatchedStatement ELSE MatchedStatement
   52                 | CompoundStatement
   53                 | WHILE Expression DO MatchedStatement
   54                 | FOR ID CE Expression TO Expression DO MatchedStatement

   55 OpenStatement: IF Expression THEN Statement
   56              | IF Expression THEN MatchedStatement ELSE OpenStatement
   57              | WHILE Expression DO OpenStatement
   58              | FOR ID CE Expression TO Expression DO OpenStatement

   59 Type: ID
   60     | ARRAY '[' Constant RG Constant ']' OF Type
   61     | RECORD Field_List END

   62 ResultType: ID

   63 Field_List: /* empty */
   64           | Field_List_E

   65 Field_List_E: IdentifierList ':' Type IdlistType_X

   66 Constant: INTEGER
   67         | Sign INTEGER

   68 Expression: Simple_Expression
   69           | Simple_Expression Relational_Op Simple_Expression

   70 Relational_Op: '<'
   71              | LT
   72              | '>'
   73              | GT
   74              | NE
   75              | '='

   76 Simple_Expression: Term AddopTerm_X
   77                  | Sign Term AddopTerm_X

   78 AddopTerm_X: AddopTerm_X_L

   79 AddopTerm_X_L: /* empty */
   80              | AddopTerm_E AddopTerm_X_L

   81 AddopTerm_E: AddOp Term

   82 AddOp: '+'
   83      | '-'
   84      | OR

   85 Term: Factor MulOpFactor_X

   86 MulOpFactor_X: MulOpFactor_X_L

   87 MulOpFactor_X_L: /* empty */
   88                | MulOpFactor_E MulOpFactor_X_L

   89 MulOpFactor_E: MulOp Factor

   90 MulOp: '*'
   91      | DIV
   92      | MOD
   93      | AND

   94 Factor: INTEGER
   95       | STRING
   96       | Variable
   97       | Function_Reference
   98       | NOT Factor
   99       | '(' Expression ')'

  100 Function_Reference: ID '(' ActualParameterList ')'

  101 Variable: ID ComponentSelection

  102 ComponentSelection: /* empty */
  103                   | ComponentSelectionGroup

  104 ComponentSelectionGroup: '.' ID ComponentSelection
  105                        | '[' Expression ']' ComponentSelection

  106 ActualParameterList: /* empty */
  107                    | Expression Expression_X

  108 Expression_X: Expression_X_L

  109 Expression_X_L: /* empty */
  110               | Expression_E Expression_X_L

  111 Expression_E: ',' Expression

  112 IdentifierList: ID Id_X

  113 Id_X: Id_X_L

  114 Id_X_L: /* empty */
  115       | Id_E Id_X_L

  116 Id_E: ',' ID

  117 Sign: '+'
  118     | '-'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 20 21 48 99 100
')' (41) 20 21 48 99 100
'*' (42) 90
'+' (43) 82 117
',' (44) 111 116
'-' (45) 83 118
'.' (46) 1 104
':' (58) 19 21 27 31 65
';' (59) 1 4 8 9 13 15 20 21 31 40
'<' (60) 70
'=' (61) 18 75
'>' (62) 72
'[' (91) 60 105
']' (93) 60 105
error (256)
INTEGER (258) 66 67 94
STRING (259) 95
ID (260) 1 18 20 21 48 54 58 59 62 100 101 104 112 116
LT (261) 71
GT (262) 73
NE (263) 74
RG (264) 60
CE (265) 47 54 58
AND (266) 93
BEGIN (267) 35
FORWARD (268) 23
DIV (269) 91
DO (270) 53 54 57 58
ELSE (271) 51 56
END (272) 35 61
FOR (273) 54 58
FUNCTION (274) 21
IF (275) 51 55 56
ARRAY (276) 60
MOD (277) 92
PROCEDURE (278) 20
OR (279) 84
OF (280) 60
NOT (281) 98
PROGRAM (282) 1
RECORD (283) 61
THEN (284) 51 55 56
TO (285) 54 58
TYPE (286) 4
VAR (287) 9
WHILE (288) 53 57


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
Program (49)
    on left: 1, on right: 0
TypeDefinitions_X (50)
    on left: 2 3, on right: 1
TypeDefinitions (51)
    on left: 4, on right: 3
TypeDefinition_X (52)
    on left: 5, on right: 4
TypeDefinition_X_L (53)
    on left: 6 7, on right: 5 7
TypeDefinition_E (54)
    on left: 8, on right: 7
VariableDeclarations (55)
    on left: 9, on right: 34
VariableDeclaration_X (56)
    on left: 10, on right: 9
VariableDeclaration_X_L (57)
    on left: 11 12, on right: 10 12
VariableDeclaration_E (58)
    on left: 13, on right: 12
SubprogramDeclarations (59)
    on left: 14 15, on right: 1 15
ProFunDeclarationGroup (60)
    on left: 16 17, on right: 15
TypeDefinition (61)
    on left: 18, on right: 4 8
VariableDeclaration (62)
    on left: 19, on right: 9 13
ProcedureDeclaration (63)
    on left: 20, on right: 16
FunctionDeclaration (64)
    on left: 21, on right: 17
BlockforwardGroup (65)
    on left: 22 23, on right: 20 21
FormalParameterList (66)
    on left: 24, on right: 20 21
FormalParameterList_X (67)
    on left: 25 26, on right: 24
FormalParameterList_E (68)
    on left: 27, on right: 26
IdlistType_X (69)
    on left: 28, on right: 27 65
IdlistType_X_L (70)
    on left: 29 30, on right: 28 30
IdlistType_E (71)
    on left: 31, on right: 30
Block (72)
    on left: 32, on right: 22
VariableDeclarations_X (73)
    on left: 33 34, on right: 1 32
CompoundStatement (74)
    on left: 35, on right: 1 32 52
StatementSequence (75)
    on left: 36, on right: 35
StatementSequence_X (76)
    on left: 37, on right: 36
StatementSequence_X_L (77)
    on left: 38 39, on right: 37 39
StatementSequence_E (78)
    on left: 40, on right: 39
Statement (79)
    on left: 41 42, on right: 36 40 55
SimpleStatement (80)
    on left: 43 44, on right: 41
SimpleStatement_E (81)
    on left: 45 46, on right: 44
Assignment_Statement (82)
    on left: 47, on right: 45
ProcedureStatement (83)
    on left: 48, on right: 46
StructuredStatement (84)
    on left: 49 50, on right: 42
MatchedStatement (85)
    on left: 51 52 53 54, on right: 49 51 53 54 56
OpenStatement (86)
    on left: 55 56 57 58, on right: 50 56 57 58
Type (87)
    on left: 59 60 61, on right: 18 19 27 31 60 65
ResultType (88)
    on left: 62, on right: 21
Field_List (89)
    on left: 63 64, on right: 61
Field_List_E (90)
    on left: 65, on right: 64
Constant (91)
    on left: 66 67, on right: 60
Expression (92)
    on left: 68 69, on right: 47 51 53 54 55 56 57 58 99 105 107 111
Relational_Op (93)
    on left: 70 71 72 73 74 75, on right: 69
Simple_Expression (94)
    on left: 76 77, on right: 68 69
AddopTerm_X (95)
    on left: 78, on right: 76 77
AddopTerm_X_L (96)
    on left: 79 80, on right: 78 80
AddopTerm_E (97)
    on left: 81, on right: 80
AddOp (98)
    on left: 82 83 84, on right: 81
Term (99)
    on left: 85, on right: 76 77 81
MulOpFactor_X (100)
    on left: 86, on right: 85
MulOpFactor_X_L (101)
    on left: 87 88, on right: 86 88
MulOpFactor_E (102)
    on left: 89, on right: 88
MulOp (103)
    on left: 90 91 92 93, on right: 89
Factor (104)
    on left: 94 95 96 97 98 99, on right: 85 89 98
Function_Reference (105)
    on left: 100, on right: 97
Variable (106)
    on left: 101, on right: 47 96
ComponentSelection (107)
    on left: 102 103, on right: 101 104 105
ComponentSelectionGroup (108)
    on left: 104 105, on right: 103
ActualParameterList (109)
    on left: 106 107, on right: 48 100
Expression_X (110)
    on left: 108, on right: 107
Expression_X_L (111)
    on left: 109 110, on right: 108 110
Expression_E (112)
    on left: 111, on right: 110
IdentifierList (113)
    on left: 112, on right: 19 27 31 65
Id_X (114)
    on left: 113, on right: 112
Id_X_L (115)
    on left: 114 115, on right: 113 115
Id_E (116)
    on left: 116, on right: 115
Sign (117)
    on left: 117 118, on right: 67 77


state 0

    0 $accept: . Program $end

    PROGRAM  shift, and go to state 1

    Program  go to state 2


state 1

    1 Program: PROGRAM . ID ';' TypeDefinitions_X VariableDeclarations_X SubprogramDeclarations CompoundStatement '.'

    ID  shift, and go to state 3


state 2

    0 $accept: Program . $end

    $end  shift, and go to state 4


state 3

    1 Program: PROGRAM ID . ';' TypeDefinitions_X VariableDeclarations_X SubprogramDeclarations CompoundStatement '.'

    ';'  shift, and go to state 5


state 4

    0 $accept: Program $end .

    $default  accept


state 5

    1 Program: PROGRAM ID ';' . TypeDefinitions_X VariableDeclarations_X SubprogramDeclarations CompoundStatement '.'

    TYPE  shift, and go to state 6

    $default  reduce using rule 2 (TypeDefinitions_X)

    TypeDefinitions_X  go to state 7
    TypeDefinitions    go to state 8


state 6

    4 TypeDefinitions: TYPE . TypeDefinition ';' TypeDefinition_X

    ID  shift, and go to state 9

    TypeDefinition  go to state 10


state 7

    1 Program: PROGRAM ID ';' TypeDefinitions_X . VariableDeclarations_X SubprogramDeclarations CompoundStatement '.'

    VAR  shift, and go to state 11

    $default  reduce using rule 33 (VariableDeclarations_X)

    VariableDeclarations    go to state 12
    VariableDeclarations_X  go to state 13


state 8

    3 TypeDefinitions_X: TypeDefinitions .

    $default  reduce using rule 3 (TypeDefinitions_X)


state 9

   18 TypeDefinition: ID . '=' Type

    '='  shift, and go to state 14


state 10

    4 TypeDefinitions: TYPE TypeDefinition . ';' TypeDefinition_X

    ';'  shift, and go to state 15


state 11

    9 VariableDeclarations: VAR . VariableDeclaration ';' VariableDeclaration_X

    ID  shift, and go to state 16

    VariableDeclaration  go to state 17
    IdentifierList       go to state 18


state 12

   34 VariableDeclarations_X: VariableDeclarations .

    $default  reduce using rule 34 (VariableDeclarations_X)


state 13

    1 Program: PROGRAM ID ';' TypeDefinitions_X VariableDeclarations_X . SubprogramDeclarations CompoundStatement '.'

    FUNCTION   shift, and go to state 19
    PROCEDURE  shift, and go to state 20

    $default  reduce using rule 14 (SubprogramDeclarations)

    SubprogramDeclarations  go to state 21
    ProFunDeclarationGroup  go to state 22
    ProcedureDeclaration    go to state 23
    FunctionDeclaration     go to state 24


state 14

   18 TypeDefinition: ID '=' . Type

    ID      shift, and go to state 25
    ARRAY   shift, and go to state 26
    RECORD  shift, and go to state 27

    Type  go to state 28


state 15

    4 TypeDefinitions: TYPE TypeDefinition ';' . TypeDefinition_X

    ID  shift, and go to state 9

    $default  reduce using rule 6 (TypeDefinition_X_L)

    TypeDefinition_X    go to state 29
    TypeDefinition_X_L  go to state 30
    TypeDefinition_E    go to state 31
    TypeDefinition      go to state 32


state 16

  112 IdentifierList: ID . Id_X

    ','  shift, and go to state 33

    $default  reduce using rule 114 (Id_X_L)

    Id_X    go to state 34
    Id_X_L  go to state 35
    Id_E    go to state 36


state 17

    9 VariableDeclarations: VAR VariableDeclaration . ';' VariableDeclaration_X

    ';'  shift, and go to state 37


state 18

   19 VariableDeclaration: IdentifierList . ':' Type

    ':'  shift, and go to state 38


state 19

   21 FunctionDeclaration: FUNCTION . ID '(' FormalParameterList ')' ':' ResultType ';' BlockforwardGroup

    ID  shift, and go to state 39


state 20

   20 ProcedureDeclaration: PROCEDURE . ID '(' FormalParameterList ')' ';' BlockforwardGroup

    ID  shift, and go to state 40


state 21

    1 Program: PROGRAM ID ';' TypeDefinitions_X VariableDeclarations_X SubprogramDeclarations . CompoundStatement '.'

    BEGIN  shift, and go to state 41

    CompoundStatement  go to state 42


state 22

   15 SubprogramDeclarations: ProFunDeclarationGroup . ';' SubprogramDeclarations

    ';'  shift, and go to state 43


state 23

   16 ProFunDeclarationGroup: ProcedureDeclaration .

    $default  reduce using rule 16 (ProFunDeclarationGroup)


state 24

   17 ProFunDeclarationGroup: FunctionDeclaration .

    $default  reduce using rule 17 (ProFunDeclarationGroup)


state 25

   59 Type: ID .

    $default  reduce using rule 59 (Type)


state 26

   60 Type: ARRAY . '[' Constant RG Constant ']' OF Type

    '['  shift, and go to state 44


state 27

   61 Type: RECORD . Field_List END

    ID  shift, and go to state 16

    $default  reduce using rule 63 (Field_List)

    Field_List      go to state 45
    Field_List_E    go to state 46
    IdentifierList  go to state 47


state 28

   18 TypeDefinition: ID '=' Type .

    $default  reduce using rule 18 (TypeDefinition)


state 29

    4 TypeDefinitions: TYPE TypeDefinition ';' TypeDefinition_X .

    $default  reduce using rule 4 (TypeDefinitions)


state 30

    5 TypeDefinition_X: TypeDefinition_X_L .

    $default  reduce using rule 5 (TypeDefinition_X)


state 31

    7 TypeDefinition_X_L: TypeDefinition_E . TypeDefinition_X_L

    ID  shift, and go to state 9

    $default  reduce using rule 6 (TypeDefinition_X_L)

    TypeDefinition_X_L  go to state 48
    TypeDefinition_E    go to state 31
    TypeDefinition      go to state 32


state 32

    8 TypeDefinition_E: TypeDefinition . ';'

    ';'  shift, and go to state 49


state 33

  116 Id_E: ',' . ID

    ID  shift, and go to state 50


state 34

  112 IdentifierList: ID Id_X .

    $default  reduce using rule 112 (IdentifierList)


state 35

  113 Id_X: Id_X_L .

    $default  reduce using rule 113 (Id_X)


state 36

  115 Id_X_L: Id_E . Id_X_L

    ','  shift, and go to state 33

    $default  reduce using rule 114 (Id_X_L)

    Id_X_L  go to state 51
    Id_E    go to state 36


state 37

    9 VariableDeclarations: VAR VariableDeclaration ';' . VariableDeclaration_X

    ID  shift, and go to state 16

    $default  reduce using rule 11 (VariableDeclaration_X_L)

    VariableDeclaration_X    go to state 52
    VariableDeclaration_X_L  go to state 53
    VariableDeclaration_E    go to state 54
    VariableDeclaration      go to state 55
    IdentifierList           go to state 18


state 38

   19 VariableDeclaration: IdentifierList ':' . Type

    ID      shift, and go to state 25
    ARRAY   shift, and go to state 26
    RECORD  shift, and go to state 27

    Type  go to state 56


state 39

   21 FunctionDeclaration: FUNCTION ID . '(' FormalParameterList ')' ':' ResultType ';' BlockforwardGroup

    '('  shift, and go to state 57


state 40

   20 ProcedureDeclaration: PROCEDURE ID . '(' FormalParameterList ')' ';' BlockforwardGroup

    '('  shift, and go to state 58


state 41

   35 CompoundStatement: BEGIN . StatementSequence END

    ID     shift, and go to state 59
    BEGIN  shift, and go to state 41
    FOR    shift, and go to state 60
    IF     shift, and go to state 61
    WHILE  shift, and go to state 62

    $default  reduce using rule 43 (SimpleStatement)

    CompoundStatement     go to state 63
    StatementSequence     go to state 64
    Statement             go to state 65
    SimpleStatement       go to state 66
    SimpleStatement_E     go to state 67
    Assignment_Statement  go to state 68
    ProcedureStatement    go to state 69
    StructuredStatement   go to state 70
    MatchedStatement      go to state 71
    OpenStatement         go to state 72
    Variable              go to state 73


state 42

    1 Program: PROGRAM ID ';' TypeDefinitions_X VariableDeclarations_X SubprogramDeclarations CompoundStatement . '.'

    '.'  shift, and go to state 74


state 43

   15 SubprogramDeclarations: ProFunDeclarationGroup ';' . SubprogramDeclarations

    FUNCTION   shift, and go to state 19
    PROCEDURE  shift, and go to state 20

    $default  reduce using rule 14 (SubprogramDeclarations)

    SubprogramDeclarations  go to state 75
    ProFunDeclarationGroup  go to state 22
    ProcedureDeclaration    go to state 23
    FunctionDeclaration     go to state 24


state 44

   60 Type: ARRAY '[' . Constant RG Constant ']' OF Type

    INTEGER  shift, and go to state 76
    '+'      shift, and go to state 77
    '-'      shift, and go to state 78

    Constant  go to state 79
    Sign      go to state 80


state 45

   61 Type: RECORD Field_List . END

    END  shift, and go to state 81


state 46

   64 Field_List: Field_List_E .

    $default  reduce using rule 64 (Field_List)


state 47

   65 Field_List_E: IdentifierList . ':' Type IdlistType_X

    ':'  shift, and go to state 82


state 48

    7 TypeDefinition_X_L: TypeDefinition_E TypeDefinition_X_L .

    $default  reduce using rule 7 (TypeDefinition_X_L)


state 49

    8 TypeDefinition_E: TypeDefinition ';' .

    $default  reduce using rule 8 (TypeDefinition_E)


state 50

  116 Id_E: ',' ID .

    $default  reduce using rule 116 (Id_E)


state 51

  115 Id_X_L: Id_E Id_X_L .

    $default  reduce using rule 115 (Id_X_L)


state 52

    9 VariableDeclarations: VAR VariableDeclaration ';' VariableDeclaration_X .

    $default  reduce using rule 9 (VariableDeclarations)


state 53

   10 VariableDeclaration_X: VariableDeclaration_X_L .

    $default  reduce using rule 10 (VariableDeclaration_X)


state 54

   12 VariableDeclaration_X_L: VariableDeclaration_E . VariableDeclaration_X_L

    ID  shift, and go to state 16

    $default  reduce using rule 11 (VariableDeclaration_X_L)

    VariableDeclaration_X_L  go to state 83
    VariableDeclaration_E    go to state 54
    VariableDeclaration      go to state 55
    IdentifierList           go to state 18


state 55

   13 VariableDeclaration_E: VariableDeclaration . ';'

    ';'  shift, and go to state 84


state 56

   19 VariableDeclaration: IdentifierList ':' Type .

    $default  reduce using rule 19 (VariableDeclaration)


state 57

   21 FunctionDeclaration: FUNCTION ID '(' . FormalParameterList ')' ':' ResultType ';' BlockforwardGroup

    ID  shift, and go to state 16

    $default  reduce using rule 25 (FormalParameterList_X)

    FormalParameterList    go to state 85
    FormalParameterList_X  go to state 86
    FormalParameterList_E  go to state 87
    IdentifierList         go to state 88


state 58

   20 ProcedureDeclaration: PROCEDURE ID '(' . FormalParameterList ')' ';' BlockforwardGroup

    ID  shift, and go to state 16

    $default  reduce using rule 25 (FormalParameterList_X)

    FormalParameterList    go to state 89
    FormalParameterList_X  go to state 86
    FormalParameterList_E  go to state 87
    IdentifierList         go to state 88


state 59

   48 ProcedureStatement: ID . '(' ActualParameterList ')'
  101 Variable: ID . ComponentSelection

    '.'  shift, and go to state 90
    '('  shift, and go to state 91
    '['  shift, and go to state 92

    $default  reduce using rule 102 (ComponentSelection)

    ComponentSelection       go to state 93
    ComponentSelectionGroup  go to state 94


state 60

   54 MatchedStatement: FOR . ID CE Expression TO Expression DO MatchedStatement
   58 OpenStatement: FOR . ID CE Expression TO Expression DO OpenStatement

    ID  shift, and go to state 95


state 61

   51 MatchedStatement: IF . Expression THEN MatchedStatement ELSE MatchedStatement
   55 OpenStatement: IF . Expression THEN Statement
   56              | IF . Expression THEN MatchedStatement ELSE OpenStatement

    INTEGER  shift, and go to state 96
    STRING   shift, and go to state 97
    ID       shift, and go to state 98
    NOT      shift, and go to state 99
    '('      shift, and go to state 100
    '+'      shift, and go to state 77
    '-'      shift, and go to state 78

    Expression          go to state 101
    Simple_Expression   go to state 102
    Term                go to state 103
    Factor              go to state 104
    Function_Reference  go to state 105
    Variable            go to state 106
    Sign                go to state 107


state 62

   53 MatchedStatement: WHILE . Expression DO MatchedStatement
   57 OpenStatement: WHILE . Expression DO OpenStatement

    INTEGER  shift, and go to state 96
    STRING   shift, and go to state 97
    ID       shift, and go to state 98
    NOT      shift, and go to state 99
    '('      shift, and go to state 100
    '+'      shift, and go to state 77
    '-'      shift, and go to state 78

    Expression          go to state 108
    Simple_Expression   go to state 102
    Term                go to state 103
    Factor              go to state 104
    Function_Reference  go to state 105
    Variable            go to state 106
    Sign                go to state 107


state 63

   52 MatchedStatement: CompoundStatement .

    $default  reduce using rule 52 (MatchedStatement)


state 64

   35 CompoundStatement: BEGIN StatementSequence . END

    END  shift, and go to state 109


state 65

   36 StatementSequence: Statement . StatementSequence_X

    ';'  shift, and go to state 110

    $default  reduce using rule 38 (StatementSequence_X_L)

    StatementSequence_X    go to state 111
    StatementSequence_X_L  go to state 112
    StatementSequence_E    go to state 113


state 66

   41 Statement: SimpleStatement .

    $default  reduce using rule 41 (Statement)


state 67

   44 SimpleStatement: SimpleStatement_E .

    $default  reduce using rule 44 (SimpleStatement)


state 68

   45 SimpleStatement_E: Assignment_Statement .

    $default  reduce using rule 45 (SimpleStatement_E)


state 69

   46 SimpleStatement_E: ProcedureStatement .

    $default  reduce using rule 46 (SimpleStatement_E)


state 70

   42 Statement: StructuredStatement .

    $default  reduce using rule 42 (Statement)


state 71

   49 StructuredStatement: MatchedStatement .

    $default  reduce using rule 49 (StructuredStatement)


state 72

   50 StructuredStatement: OpenStatement .

    $default  reduce using rule 50 (StructuredStatement)


state 73

   47 Assignment_Statement: Variable . CE Expression

    CE  shift, and go to state 114


state 74

    1 Program: PROGRAM ID ';' TypeDefinitions_X VariableDeclarations_X SubprogramDeclarations CompoundStatement '.' .

    $default  reduce using rule 1 (Program)


state 75

   15 SubprogramDeclarations: ProFunDeclarationGroup ';' SubprogramDeclarations .

    $default  reduce using rule 15 (SubprogramDeclarations)


state 76

   66 Constant: INTEGER .

    $default  reduce using rule 66 (Constant)


state 77

  117 Sign: '+' .

    $default  reduce using rule 117 (Sign)


state 78

  118 Sign: '-' .

    $default  reduce using rule 118 (Sign)


state 79

   60 Type: ARRAY '[' Constant . RG Constant ']' OF Type

    RG  shift, and go to state 115


state 80

   67 Constant: Sign . INTEGER

    INTEGER  shift, and go to state 116


state 81

   61 Type: RECORD Field_List END .

    $default  reduce using rule 61 (Type)


state 82

   65 Field_List_E: IdentifierList ':' . Type IdlistType_X

    ID      shift, and go to state 25
    ARRAY   shift, and go to state 26
    RECORD  shift, and go to state 27

    Type  go to state 117


state 83

   12 VariableDeclaration_X_L: VariableDeclaration_E VariableDeclaration_X_L .

    $default  reduce using rule 12 (VariableDeclaration_X_L)


state 84

   13 VariableDeclaration_E: VariableDeclaration ';' .

    $default  reduce using rule 13 (VariableDeclaration_E)


state 85

   21 FunctionDeclaration: FUNCTION ID '(' FormalParameterList . ')' ':' ResultType ';' BlockforwardGroup

    ')'  shift, and go to state 118


state 86

   24 FormalParameterList: FormalParameterList_X .

    $default  reduce using rule 24 (FormalParameterList)


state 87

   26 FormalParameterList_X: FormalParameterList_E .

    $default  reduce using rule 26 (FormalParameterList_X)


state 88

   27 FormalParameterList_E: IdentifierList . ':' Type IdlistType_X

    ':'  shift, and go to state 119


state 89

   20 ProcedureDeclaration: PROCEDURE ID '(' FormalParameterList . ')' ';' BlockforwardGroup

    ')'  shift, and go to state 120


state 90

  104 ComponentSelectionGroup: '.' . ID ComponentSelection

    ID  shift, and go to state 121


state 91

   48 ProcedureStatement: ID '(' . ActualParameterList ')'

    INTEGER  shift, and go to state 96
    STRING   shift, and go to state 97
    ID       shift, and go to state 98
    NOT      shift, and go to state 99
    '('      shift, and go to state 100
    '+'      shift, and go to state 77
    '-'      shift, and go to state 78

    $default  reduce using rule 106 (ActualParameterList)

    Expression           go to state 122
    Simple_Expression    go to state 102
    Term                 go to state 103
    Factor               go to state 104
    Function_Reference   go to state 105
    Variable             go to state 106
    ActualParameterList  go to state 123
    Sign                 go to state 107


state 92

  105 ComponentSelectionGroup: '[' . Expression ']' ComponentSelection

    INTEGER  shift, and go to state 96
    STRING   shift, and go to state 97
    ID       shift, and go to state 98
    NOT      shift, and go to state 99
    '('      shift, and go to state 100
    '+'      shift, and go to state 77
    '-'      shift, and go to state 78

    Expression          go to state 124
    Simple_Expression   go to state 102
    Term                go to state 103
    Factor              go to state 104
    Function_Reference  go to state 105
    Variable            go to state 106
    Sign                go to state 107


state 93

  101 Variable: ID ComponentSelection .

    $default  reduce using rule 101 (Variable)


state 94

  103 ComponentSelection: ComponentSelectionGroup .

    $default  reduce using rule 103 (ComponentSelection)


state 95

   54 MatchedStatement: FOR ID . CE Expression TO Expression DO MatchedStatement
   58 OpenStatement: FOR ID . CE Expression TO Expression DO OpenStatement

    CE  shift, and go to state 125


state 96

   94 Factor: INTEGER .

    $default  reduce using rule 94 (Factor)


state 97

   95 Factor: STRING .

    $default  reduce using rule 95 (Factor)


state 98

  100 Function_Reference: ID . '(' ActualParameterList ')'
  101 Variable: ID . ComponentSelection

    '.'  shift, and go to state 90
    '('  shift, and go to state 126
    '['  shift, and go to state 92

    $default  reduce using rule 102 (ComponentSelection)

    ComponentSelection       go to state 93
    ComponentSelectionGroup  go to state 94


state 99

   98 Factor: NOT . Factor

    INTEGER  shift, and go to state 96
    STRING   shift, and go to state 97
    ID       shift, and go to state 98
    NOT      shift, and go to state 99
    '('      shift, and go to state 100

    Factor              go to state 127
    Function_Reference  go to state 105
    Variable            go to state 106


state 100

   99 Factor: '(' . Expression ')'

    INTEGER  shift, and go to state 96
    STRING   shift, and go to state 97
    ID       shift, and go to state 98
    NOT      shift, and go to state 99
    '('      shift, and go to state 100
    '+'      shift, and go to state 77
    '-'      shift, and go to state 78

    Expression          go to state 128
    Simple_Expression   go to state 102
    Term                go to state 103
    Factor              go to state 104
    Function_Reference  go to state 105
    Variable            go to state 106
    Sign                go to state 107


state 101

   51 MatchedStatement: IF Expression . THEN MatchedStatement ELSE MatchedStatement
   55 OpenStatement: IF Expression . THEN Statement
   56              | IF Expression . THEN MatchedStatement ELSE OpenStatement

    THEN  shift, and go to state 129


state 102

   68 Expression: Simple_Expression .
   69           | Simple_Expression . Relational_Op Simple_Expression

    LT   shift, and go to state 130
    GT   shift, and go to state 131
    NE   shift, and go to state 132
    '='  shift, and go to state 133
    '<'  shift, and go to state 134
    '>'  shift, and go to state 135

    $default  reduce using rule 68 (Expression)

    Relational_Op  go to state 136


state 103

   76 Simple_Expression: Term . AddopTerm_X

    OR   shift, and go to state 137
    '+'  shift, and go to state 138
    '-'  shift, and go to state 139

    $default  reduce using rule 79 (AddopTerm_X_L)

    AddopTerm_X    go to state 140
    AddopTerm_X_L  go to state 141
    AddopTerm_E    go to state 142
    AddOp          go to state 143


state 104

   85 Term: Factor . MulOpFactor_X

    AND  shift, and go to state 144
    DIV  shift, and go to state 145
    MOD  shift, and go to state 146
    '*'  shift, and go to state 147

    $default  reduce using rule 87 (MulOpFactor_X_L)

    MulOpFactor_X    go to state 148
    MulOpFactor_X_L  go to state 149
    MulOpFactor_E    go to state 150
    MulOp            go to state 151


state 105

   97 Factor: Function_Reference .

    $default  reduce using rule 97 (Factor)


state 106

   96 Factor: Variable .

    $default  reduce using rule 96 (Factor)


state 107

   77 Simple_Expression: Sign . Term AddopTerm_X

    INTEGER  shift, and go to state 96
    STRING   shift, and go to state 97
    ID       shift, and go to state 98
    NOT      shift, and go to state 99
    '('      shift, and go to state 100

    Term                go to state 152
    Factor              go to state 104
    Function_Reference  go to state 105
    Variable            go to state 106


state 108

   53 MatchedStatement: WHILE Expression . DO MatchedStatement
   57 OpenStatement: WHILE Expression . DO OpenStatement

    DO  shift, and go to state 153


state 109

   35 CompoundStatement: BEGIN StatementSequence END .

    $default  reduce using rule 35 (CompoundStatement)


state 110

   40 StatementSequence_E: ';' . Statement

    ID     shift, and go to state 59
    BEGIN  shift, and go to state 41
    FOR    shift, and go to state 60
    IF     shift, and go to state 61
    WHILE  shift, and go to state 62

    $default  reduce using rule 43 (SimpleStatement)

    CompoundStatement     go to state 63
    Statement             go to state 154
    SimpleStatement       go to state 66
    SimpleStatement_E     go to state 67
    Assignment_Statement  go to state 68
    ProcedureStatement    go to state 69
    StructuredStatement   go to state 70
    MatchedStatement      go to state 71
    OpenStatement         go to state 72
    Variable              go to state 73


state 111

   36 StatementSequence: Statement StatementSequence_X .

    $default  reduce using rule 36 (StatementSequence)


state 112

   37 StatementSequence_X: StatementSequence_X_L .

    $default  reduce using rule 37 (StatementSequence_X)


state 113

   39 StatementSequence_X_L: StatementSequence_E . StatementSequence_X_L

    ';'  shift, and go to state 110

    $default  reduce using rule 38 (StatementSequence_X_L)

    StatementSequence_X_L  go to state 155
    StatementSequence_E    go to state 113


state 114

   47 Assignment_Statement: Variable CE . Expression

    INTEGER  shift, and go to state 96
    STRING   shift, and go to state 97
    ID       shift, and go to state 98
    NOT      shift, and go to state 99
    '('      shift, and go to state 100
    '+'      shift, and go to state 77
    '-'      shift, and go to state 78

    Expression          go to state 156
    Simple_Expression   go to state 102
    Term                go to state 103
    Factor              go to state 104
    Function_Reference  go to state 105
    Variable            go to state 106
    Sign                go to state 107


state 115

   60 Type: ARRAY '[' Constant RG . Constant ']' OF Type

    INTEGER  shift, and go to state 76
    '+'      shift, and go to state 77
    '-'      shift, and go to state 78

    Constant  go to state 157
    Sign      go to state 80


state 116

   67 Constant: Sign INTEGER .

    $default  reduce using rule 67 (Constant)


state 117

   65 Field_List_E: IdentifierList ':' Type . IdlistType_X

    ';'  shift, and go to state 158

    $default  reduce using rule 29 (IdlistType_X_L)

    IdlistType_X    go to state 159
    IdlistType_X_L  go to state 160
    IdlistType_E    go to state 161


state 118

   21 FunctionDeclaration: FUNCTION ID '(' FormalParameterList ')' . ':' ResultType ';' BlockforwardGroup

    ':'  shift, and go to state 162


state 119

   27 FormalParameterList_E: IdentifierList ':' . Type IdlistType_X

    ID      shift, and go to state 25
    ARRAY   shift, and go to state 26
    RECORD  shift, and go to state 27

    Type  go to state 163


state 120

   20 ProcedureDeclaration: PROCEDURE ID '(' FormalParameterList ')' . ';' BlockforwardGroup

    ';'  shift, and go to state 164


state 121

  104 ComponentSelectionGroup: '.' ID . ComponentSelection

    '.'  shift, and go to state 90
    '['  shift, and go to state 92

    $default  reduce using rule 102 (ComponentSelection)

    ComponentSelection       go to state 165
    ComponentSelectionGroup  go to state 94


state 122

  107 ActualParameterList: Expression . Expression_X

    ','  shift, and go to state 166

    $default  reduce using rule 109 (Expression_X_L)

    Expression_X    go to state 167
    Expression_X_L  go to state 168
    Expression_E    go to state 169


state 123

   48 ProcedureStatement: ID '(' ActualParameterList . ')'

    ')'  shift, and go to state 170


state 124

  105 ComponentSelectionGroup: '[' Expression . ']' ComponentSelection

    ']'  shift, and go to state 171


state 125

   54 MatchedStatement: FOR ID CE . Expression TO Expression DO MatchedStatement
   58 OpenStatement: FOR ID CE . Expression TO Expression DO OpenStatement

    INTEGER  shift, and go to state 96
    STRING   shift, and go to state 97
    ID       shift, and go to state 98
    NOT      shift, and go to state 99
    '('      shift, and go to state 100
    '+'      shift, and go to state 77
    '-'      shift, and go to state 78

    Expression          go to state 172
    Simple_Expression   go to state 102
    Term                go to state 103
    Factor              go to state 104
    Function_Reference  go to state 105
    Variable            go to state 106
    Sign                go to state 107


state 126

  100 Function_Reference: ID '(' . ActualParameterList ')'

    INTEGER  shift, and go to state 96
    STRING   shift, and go to state 97
    ID       shift, and go to state 98
    NOT      shift, and go to state 99
    '('      shift, and go to state 100
    '+'      shift, and go to state 77
    '-'      shift, and go to state 78

    $default  reduce using rule 106 (ActualParameterList)

    Expression           go to state 122
    Simple_Expression    go to state 102
    Term                 go to state 103
    Factor               go to state 104
    Function_Reference   go to state 105
    Variable             go to state 106
    ActualParameterList  go to state 173
    Sign                 go to state 107


state 127

   98 Factor: NOT Factor .

    $default  reduce using rule 98 (Factor)


state 128

   99 Factor: '(' Expression . ')'

    ')'  shift, and go to state 174


state 129

   51 MatchedStatement: IF Expression THEN . MatchedStatement ELSE MatchedStatement
   55 OpenStatement: IF Expression THEN . Statement
   56              | IF Expression THEN . MatchedStatement ELSE OpenStatement

    ID     shift, and go to state 59
    BEGIN  shift, and go to state 41
    FOR    shift, and go to state 60
    IF     shift, and go to state 61
    WHILE  shift, and go to state 62

    $default  reduce using rule 43 (SimpleStatement)

    CompoundStatement     go to state 63
    Statement             go to state 175
    SimpleStatement       go to state 66
    SimpleStatement_E     go to state 67
    Assignment_Statement  go to state 68
    ProcedureStatement    go to state 69
    StructuredStatement   go to state 70
    MatchedStatement      go to state 176
    OpenStatement         go to state 72
    Variable              go to state 73


state 130

   71 Relational_Op: LT .

    $default  reduce using rule 71 (Relational_Op)


state 131

   73 Relational_Op: GT .

    $default  reduce using rule 73 (Relational_Op)


state 132

   74 Relational_Op: NE .

    $default  reduce using rule 74 (Relational_Op)


state 133

   75 Relational_Op: '=' .

    $default  reduce using rule 75 (Relational_Op)


state 134

   70 Relational_Op: '<' .

    $default  reduce using rule 70 (Relational_Op)


state 135

   72 Relational_Op: '>' .

    $default  reduce using rule 72 (Relational_Op)


state 136

   69 Expression: Simple_Expression Relational_Op . Simple_Expression

    INTEGER  shift, and go to state 96
    STRING   shift, and go to state 97
    ID       shift, and go to state 98
    NOT      shift, and go to state 99
    '('      shift, and go to state 100
    '+'      shift, and go to state 77
    '-'      shift, and go to state 78

    Simple_Expression   go to state 177
    Term                go to state 103
    Factor              go to state 104
    Function_Reference  go to state 105
    Variable            go to state 106
    Sign                go to state 107


state 137

   84 AddOp: OR .

    $default  reduce using rule 84 (AddOp)


state 138

   82 AddOp: '+' .

    $default  reduce using rule 82 (AddOp)


state 139

   83 AddOp: '-' .

    $default  reduce using rule 83 (AddOp)


state 140

   76 Simple_Expression: Term AddopTerm_X .

    $default  reduce using rule 76 (Simple_Expression)


state 141

   78 AddopTerm_X: AddopTerm_X_L .

    $default  reduce using rule 78 (AddopTerm_X)


state 142

   80 AddopTerm_X_L: AddopTerm_E . AddopTerm_X_L

    OR   shift, and go to state 137
    '+'  shift, and go to state 138
    '-'  shift, and go to state 139

    $default  reduce using rule 79 (AddopTerm_X_L)

    AddopTerm_X_L  go to state 178
    AddopTerm_E    go to state 142
    AddOp          go to state 143


state 143

   81 AddopTerm_E: AddOp . Term

    INTEGER  shift, and go to state 96
    STRING   shift, and go to state 97
    ID       shift, and go to state 98
    NOT      shift, and go to state 99
    '('      shift, and go to state 100

    Term                go to state 179
    Factor              go to state 104
    Function_Reference  go to state 105
    Variable            go to state 106


state 144

   93 MulOp: AND .

    $default  reduce using rule 93 (MulOp)


state 145

   91 MulOp: DIV .

    $default  reduce using rule 91 (MulOp)


state 146

   92 MulOp: MOD .

    $default  reduce using rule 92 (MulOp)


state 147

   90 MulOp: '*' .

    $default  reduce using rule 90 (MulOp)


state 148

   85 Term: Factor MulOpFactor_X .

    $default  reduce using rule 85 (Term)


state 149

   86 MulOpFactor_X: MulOpFactor_X_L .

    $default  reduce using rule 86 (MulOpFactor_X)


state 150

   88 MulOpFactor_X_L: MulOpFactor_E . MulOpFactor_X_L

    AND  shift, and go to state 144
    DIV  shift, and go to state 145
    MOD  shift, and go to state 146
    '*'  shift, and go to state 147

    $default  reduce using rule 87 (MulOpFactor_X_L)

    MulOpFactor_X_L  go to state 180
    MulOpFactor_E    go to state 150
    MulOp            go to state 151


state 151

   89 MulOpFactor_E: MulOp . Factor

    INTEGER  shift, and go to state 96
    STRING   shift, and go to state 97
    ID       shift, and go to state 98
    NOT      shift, and go to state 99
    '('      shift, and go to state 100

    Factor              go to state 181
    Function_Reference  go to state 105
    Variable            go to state 106


state 152

   77 Simple_Expression: Sign Term . AddopTerm_X

    OR   shift, and go to state 137
    '+'  shift, and go to state 138
    '-'  shift, and go to state 139

    $default  reduce using rule 79 (AddopTerm_X_L)

    AddopTerm_X    go to state 182
    AddopTerm_X_L  go to state 141
    AddopTerm_E    go to state 142
    AddOp          go to state 143


state 153

   53 MatchedStatement: WHILE Expression DO . MatchedStatement
   57 OpenStatement: WHILE Expression DO . OpenStatement

    BEGIN  shift, and go to state 41
    FOR    shift, and go to state 60
    IF     shift, and go to state 61
    WHILE  shift, and go to state 62

    CompoundStatement  go to state 63
    MatchedStatement   go to state 183
    OpenStatement      go to state 184


state 154

   40 StatementSequence_E: ';' Statement .

    $default  reduce using rule 40 (StatementSequence_E)


state 155

   39 StatementSequence_X_L: StatementSequence_E StatementSequence_X_L .

    $default  reduce using rule 39 (StatementSequence_X_L)


state 156

   47 Assignment_Statement: Variable CE Expression .

    $default  reduce using rule 47 (Assignment_Statement)


state 157

   60 Type: ARRAY '[' Constant RG Constant . ']' OF Type

    ']'  shift, and go to state 185


state 158

   31 IdlistType_E: ';' . IdentifierList ':' Type

    ID  shift, and go to state 16

    IdentifierList  go to state 186


state 159

   65 Field_List_E: IdentifierList ':' Type IdlistType_X .

    $default  reduce using rule 65 (Field_List_E)


state 160

   28 IdlistType_X: IdlistType_X_L .

    $default  reduce using rule 28 (IdlistType_X)


state 161

   30 IdlistType_X_L: IdlistType_E . IdlistType_X_L

    ';'  shift, and go to state 158

    $default  reduce using rule 29 (IdlistType_X_L)

    IdlistType_X_L  go to state 187
    IdlistType_E    go to state 161


state 162

   21 FunctionDeclaration: FUNCTION ID '(' FormalParameterList ')' ':' . ResultType ';' BlockforwardGroup

    ID  shift, and go to state 188

    ResultType  go to state 189


state 163

   27 FormalParameterList_E: IdentifierList ':' Type . IdlistType_X

    ';'  shift, and go to state 158

    $default  reduce using rule 29 (IdlistType_X_L)

    IdlistType_X    go to state 190
    IdlistType_X_L  go to state 160
    IdlistType_E    go to state 161


state 164

   20 ProcedureDeclaration: PROCEDURE ID '(' FormalParameterList ')' ';' . BlockforwardGroup

    FORWARD  shift, and go to state 191
    VAR      shift, and go to state 11

    $default  reduce using rule 33 (VariableDeclarations_X)

    VariableDeclarations    go to state 12
    BlockforwardGroup       go to state 192
    Block                   go to state 193
    VariableDeclarations_X  go to state 194


state 165

  104 ComponentSelectionGroup: '.' ID ComponentSelection .

    $default  reduce using rule 104 (ComponentSelectionGroup)


state 166

  111 Expression_E: ',' . Expression

    INTEGER  shift, and go to state 96
    STRING   shift, and go to state 97
    ID       shift, and go to state 98
    NOT      shift, and go to state 99
    '('      shift, and go to state 100
    '+'      shift, and go to state 77
    '-'      shift, and go to state 78

    Expression          go to state 195
    Simple_Expression   go to state 102
    Term                go to state 103
    Factor              go to state 104
    Function_Reference  go to state 105
    Variable            go to state 106
    Sign                go to state 107


state 167

  107 ActualParameterList: Expression Expression_X .

    $default  reduce using rule 107 (ActualParameterList)


state 168

  108 Expression_X: Expression_X_L .

    $default  reduce using rule 108 (Expression_X)


state 169

  110 Expression_X_L: Expression_E . Expression_X_L

    ','  shift, and go to state 166

    $default  reduce using rule 109 (Expression_X_L)

    Expression_X_L  go to state 196
    Expression_E    go to state 169


state 170

   48 ProcedureStatement: ID '(' ActualParameterList ')' .

    $default  reduce using rule 48 (ProcedureStatement)


state 171

  105 ComponentSelectionGroup: '[' Expression ']' . ComponentSelection

    '.'  shift, and go to state 90
    '['  shift, and go to state 92

    $default  reduce using rule 102 (ComponentSelection)

    ComponentSelection       go to state 197
    ComponentSelectionGroup  go to state 94


state 172

   54 MatchedStatement: FOR ID CE Expression . TO Expression DO MatchedStatement
   58 OpenStatement: FOR ID CE Expression . TO Expression DO OpenStatement

    TO  shift, and go to state 198


state 173

  100 Function_Reference: ID '(' ActualParameterList . ')'

    ')'  shift, and go to state 199


state 174

   99 Factor: '(' Expression ')' .

    $default  reduce using rule 99 (Factor)


state 175

   55 OpenStatement: IF Expression THEN Statement .

    $default  reduce using rule 55 (OpenStatement)


state 176

   49 StructuredStatement: MatchedStatement .
   51 MatchedStatement: IF Expression THEN MatchedStatement . ELSE MatchedStatement
   56 OpenStatement: IF Expression THEN MatchedStatement . ELSE OpenStatement

    ELSE  shift, and go to state 200

    $default  reduce using rule 49 (StructuredStatement)


state 177

   69 Expression: Simple_Expression Relational_Op Simple_Expression .

    $default  reduce using rule 69 (Expression)


state 178

   80 AddopTerm_X_L: AddopTerm_E AddopTerm_X_L .

    $default  reduce using rule 80 (AddopTerm_X_L)


state 179

   81 AddopTerm_E: AddOp Term .

    $default  reduce using rule 81 (AddopTerm_E)


state 180

   88 MulOpFactor_X_L: MulOpFactor_E MulOpFactor_X_L .

    $default  reduce using rule 88 (MulOpFactor_X_L)


state 181

   89 MulOpFactor_E: MulOp Factor .

    $default  reduce using rule 89 (MulOpFactor_E)


state 182

   77 Simple_Expression: Sign Term AddopTerm_X .

    $default  reduce using rule 77 (Simple_Expression)


state 183

   53 MatchedStatement: WHILE Expression DO MatchedStatement .

    $default  reduce using rule 53 (MatchedStatement)


state 184

   57 OpenStatement: WHILE Expression DO OpenStatement .

    $default  reduce using rule 57 (OpenStatement)


state 185

   60 Type: ARRAY '[' Constant RG Constant ']' . OF Type

    OF  shift, and go to state 201


state 186

   31 IdlistType_E: ';' IdentifierList . ':' Type

    ':'  shift, and go to state 202


state 187

   30 IdlistType_X_L: IdlistType_E IdlistType_X_L .

    $default  reduce using rule 30 (IdlistType_X_L)


state 188

   62 ResultType: ID .

    $default  reduce using rule 62 (ResultType)


state 189

   21 FunctionDeclaration: FUNCTION ID '(' FormalParameterList ')' ':' ResultType . ';' BlockforwardGroup

    ';'  shift, and go to state 203


state 190

   27 FormalParameterList_E: IdentifierList ':' Type IdlistType_X .

    $default  reduce using rule 27 (FormalParameterList_E)


state 191

   23 BlockforwardGroup: FORWARD .

    $default  reduce using rule 23 (BlockforwardGroup)


state 192

   20 ProcedureDeclaration: PROCEDURE ID '(' FormalParameterList ')' ';' BlockforwardGroup .

    $default  reduce using rule 20 (ProcedureDeclaration)


state 193

   22 BlockforwardGroup: Block .

    $default  reduce using rule 22 (BlockforwardGroup)


state 194

   32 Block: VariableDeclarations_X . CompoundStatement

    BEGIN  shift, and go to state 41

    CompoundStatement  go to state 204


state 195

  111 Expression_E: ',' Expression .

    $default  reduce using rule 111 (Expression_E)


state 196

  110 Expression_X_L: Expression_E Expression_X_L .

    $default  reduce using rule 110 (Expression_X_L)


state 197

  105 ComponentSelectionGroup: '[' Expression ']' ComponentSelection .

    $default  reduce using rule 105 (ComponentSelectionGroup)


state 198

   54 MatchedStatement: FOR ID CE Expression TO . Expression DO MatchedStatement
   58 OpenStatement: FOR ID CE Expression TO . Expression DO OpenStatement

    INTEGER  shift, and go to state 96
    STRING   shift, and go to state 97
    ID       shift, and go to state 98
    NOT      shift, and go to state 99
    '('      shift, and go to state 100
    '+'      shift, and go to state 77
    '-'      shift, and go to state 78

    Expression          go to state 205
    Simple_Expression   go to state 102
    Term                go to state 103
    Factor              go to state 104
    Function_Reference  go to state 105
    Variable            go to state 106
    Sign                go to state 107


state 199

  100 Function_Reference: ID '(' ActualParameterList ')' .

    $default  reduce using rule 100 (Function_Reference)


state 200

   51 MatchedStatement: IF Expression THEN MatchedStatement ELSE . MatchedStatement
   56 OpenStatement: IF Expression THEN MatchedStatement ELSE . OpenStatement

    BEGIN  shift, and go to state 41
    FOR    shift, and go to state 60
    IF     shift, and go to state 61
    WHILE  shift, and go to state 62

    CompoundStatement  go to state 63
    MatchedStatement   go to state 206
    OpenStatement      go to state 207


state 201

   60 Type: ARRAY '[' Constant RG Constant ']' OF . Type

    ID      shift, and go to state 25
    ARRAY   shift, and go to state 26
    RECORD  shift, and go to state 27

    Type  go to state 208


state 202

   31 IdlistType_E: ';' IdentifierList ':' . Type

    ID      shift, and go to state 25
    ARRAY   shift, and go to state 26
    RECORD  shift, and go to state 27

    Type  go to state 209


state 203

   21 FunctionDeclaration: FUNCTION ID '(' FormalParameterList ')' ':' ResultType ';' . BlockforwardGroup

    FORWARD  shift, and go to state 191
    VAR      shift, and go to state 11

    $default  reduce using rule 33 (VariableDeclarations_X)

    VariableDeclarations    go to state 12
    BlockforwardGroup       go to state 210
    Block                   go to state 193
    VariableDeclarations_X  go to state 194


state 204

   32 Block: VariableDeclarations_X CompoundStatement .

    $default  reduce using rule 32 (Block)


state 205

   54 MatchedStatement: FOR ID CE Expression TO Expression . DO MatchedStatement
   58 OpenStatement: FOR ID CE Expression TO Expression . DO OpenStatement

    DO  shift, and go to state 211


state 206

   51 MatchedStatement: IF Expression THEN MatchedStatement ELSE MatchedStatement .

    $default  reduce using rule 51 (MatchedStatement)


state 207

   56 OpenStatement: IF Expression THEN MatchedStatement ELSE OpenStatement .

    $default  reduce using rule 56 (OpenStatement)


state 208

   60 Type: ARRAY '[' Constant RG Constant ']' OF Type .

    $default  reduce using rule 60 (Type)


state 209

   31 IdlistType_E: ';' IdentifierList ':' Type .

    $default  reduce using rule 31 (IdlistType_E)


state 210

   21 FunctionDeclaration: FUNCTION ID '(' FormalParameterList ')' ':' ResultType ';' BlockforwardGroup .

    $default  reduce using rule 21 (FunctionDeclaration)


state 211

   54 MatchedStatement: FOR ID CE Expression TO Expression DO . MatchedStatement
   58 OpenStatement: FOR ID CE Expression TO Expression DO . OpenStatement

    BEGIN  shift, and go to state 41
    FOR    shift, and go to state 60
    IF     shift, and go to state 61
    WHILE  shift, and go to state 62

    CompoundStatement  go to state 63
    MatchedStatement   go to state 212
    OpenStatement      go to state 213


state 212

   54 MatchedStatement: FOR ID CE Expression TO Expression DO MatchedStatement .

    $default  reduce using rule 54 (MatchedStatement)


state 213

   58 OpenStatement: FOR ID CE Expression TO Expression DO OpenStatement .

    $default  reduce using rule 58 (OpenStatement)
